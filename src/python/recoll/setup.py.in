from setuptools import setup, Extension
import os
import sys

sysname = os.uname()[0]

# See setup.cfg.in
if not os.path.exists('Recoll.egg-info'):
   os.mkdir('Recoll.egg-info')

# For shadow builds: references to the source tree
top = os.path.join('@srcdir@', '..', '..')
pytop = '@srcdir@'
publiclib = @RECOLL_PUBLIC_LIB@

# For shadow builds: reference to the top of the local tree (for finding
# generated .h files, e.g. autoconfig.h)
localtop = os.path.join(os.path.dirname(__file__), '..', '..')

# Ensure that we can build with an uninstalled lib from a build tree
library_dirs = [os.path.realpath(os.path.join(localtop, '.libs'))]

if "CYGWIN" in os.environ:
        libraries =  ['recoll', 'xapian', 'iconv', 'z']
else:
        libraries = ['recoll']
        
extra_compile_args = ['-std=c++11']
define_macros = [('RECOLL_DATADIR', '"@RECOLL_DATADIR@"'),]
DEF_EXT4_BIRTH_TIME =  @DEF_EXT4_BIRTH_TIME@
if DEF_EXT4_BIRTH_TIME == 1:
   define_macros.append(('EXT4_BIRTH_TIME', 1))

VERSION = open(os.path.join(top, "RECOLL-VERSION.txt")).read().strip()

include_dirs = [
        os.path.join(localtop, 'common'),
        os.path.join(top, 'common'), 
        os.path.join(top, 'index'), 
        os.path.join(top, 'internfile'), 
        os.path.join(top, 'query'), 
        os.path.join(top, 'rcldb'), 
        os.path.join(top, 'utils'), 
]
if not publiclib:
    if 'libdir' in os.environ and os.environ['libdir'] != "":
        runtime_library_dirs = [os.path.join(os.environ['libdir'], 'recoll')]
    else:
        runtime_library_dirs = [os.path.join('@prefix@', 'lib', 'recoll')]
else:
    include_dirs.append('/usr/include/recoll')
    runtime_library_dirs = list()
    
module1 = Extension('_recoll',
                    define_macros = define_macros,
                    include_dirs = include_dirs,
                    extra_compile_args = extra_compile_args,
                    libraries = libraries,
                    library_dirs = library_dirs,
                    runtime_library_dirs = runtime_library_dirs,
                    sources = [os.path.join(pytop, 'pyrecoll.cpp'),
                               os.path.join(pytop, 'pyresultstore.cpp'),
                               os.path.join(pytop, 'pyrclextract.cpp')
                               ])

setup (name = 'Recoll',
       version = VERSION,
       description = 'Query/Augment a Recoll full text index',
       author = 'J.F. Dockes',
       author_email = 'jfd@recoll.org',
       url = 'http://www.recoll.org',
       license = 'GPL',
       package_dir = {'' : os.path.join(top, 'python', 'recoll')},
       long_description = '''
''',
    packages = ['recoll'],
    ext_package = 'recoll',
    ext_modules = [module1])
