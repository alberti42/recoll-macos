commit 802a6c4f0f5a64ac5e3884a321d998f4b784fbe6
Author: Jean-Francois Dockes <jf@dockes.org>
Date:   Sat Apr 27 19:17:07 2024 +0200

    Recoll: slightly modified for pdfinfo and pdftotext to be relocatable on MacOS

diff --git a/00-JF-README.txt b/00-JF-README.txt
new file mode 100644
index 00000000..1e6339e2
--- /dev/null
+++ b/00-JF-README.txt
@@ -0,0 +1,14 @@
+poppler slightly modified to allow relocatable install on MacOS
+
+- Slight modifs of the CMakeLists.txt to minimize deps
+- runcmake.sh script to run cmake with the right options. Build a static poppler lib only.
+  mkdir build
+  cd build
+  sh ../runcmake.sh
+
+- Changes to GlobalParams.cc for locating the data on MacOS, relative to the exec location
+
+- link-pdftotext.sh script to relink statically pdftotext and pdfinfo after the build (could not get
+  cmake to use static versions of libfontconfig and libfreetype while using dynamic versions for the
+  standard mac libs).
+
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 3bd869a9..d82802bc 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -84,11 +84,7 @@ option(ENABLE_ZLIB_UNCOMPRESS "Use zlib to uncompress flate streams (not totally
 option(USE_FLOAT "Use single precision arithmetic in the Splash backend" OFF)
 option(BUILD_SHARED_LIBS "Build poppler as a shared library" ON)
 option(RUN_GPERF_IF_PRESENT "Run gperf if it is found" ON)
-if(WIN32)
-  option(ENABLE_RELOCATABLE "Do not hardcode the poppler library location (on Windows)." ON)
-else()
-  set(ENABLE_RELOCATABLE OFF)
-endif()
+option(ENABLE_RELOCATABLE "Do not hardcode the poppler library location (on Windows)." ON)
 option(EXTRA_WARN "Enable extra compile warnings" OFF)
 
 set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)
@@ -169,7 +165,9 @@ find_soft_mandatory_package(ENABLE_GPGME Gpgmepp 1.19)
 find_soft_mandatory_package(ENABLE_LIBTIFF TIFF 4.1)
 
 macro_optional_find_package(JPEG)
+set(JPEG_FOUND 0)
 macro_optional_find_package(PNG)
+set(PNG_FOUND 0)
 if(ENABLE_DCTDECODER STREQUAL "libjpeg")
   if(JPEG_FOUND)
     include(CheckCSourceCompiles)
diff --git a/link-pdftotext.sh b/link-pdftotext.sh
new file mode 100644
index 00000000..45f4aeb0
--- /dev/null
+++ b/link-pdftotext.sh
@@ -0,0 +1,33 @@
+cd utils
+
+/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ \
+-O2 -g -DNDEBUG -isysroot \
+/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk \
+-Wl,-search_paths_first -Wl,-headerpad_max_install_names \
+CMakeFiles/pdftotext.dir/parseargs.cc.o \
+CMakeFiles/pdftotext.dir/Win32Console.cc.o \
+CMakeFiles/pdftotext.dir/pdftotext.cc.o \
+CMakeFiles/pdftotext.dir/printencodings.cc.o -o pdftotext \
+../libpoppler.a \
+/usr/local/lib/libfreetype.a \
+/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk/usr/lib/libz.tbd \
+/usr/local/lib/libfontconfig.a \
+/usr/local/lib/libpng.a \
+-lexpat -lbz2
+
+/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ \
+-O2 -g -DNDEBUG -isysroot \
+/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk \
+-Wl,-search_paths_first -Wl,-headerpad_max_install_names \
+CMakeFiles/pdfinfo.dir/parseargs.cc.o \
+CMakeFiles/pdfinfo.dir/Win32Console.cc.o \
+CMakeFiles/pdfinfo.dir/pdfinfo.cc.o \
+CMakeFiles/pdfinfo.dir/printencodings.cc.o -o pdfinfo  \
+../libpoppler.a \
+/usr/local/lib/libfreetype.a \
+/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk/usr/lib/libz.tbd \
+/usr/local/lib/libfontconfig.a \
+/usr/local/lib/libpng.a \
+-lexpat -lbz2
+
+echo Now copy utils/pdfinfo and utils/pdftotext to the target install
diff --git a/poppler/GlobalParams.cc b/poppler/GlobalParams.cc
index 7da1232a..2b922151 100644
--- a/poppler/GlobalParams.cc
+++ b/poppler/GlobalParams.cc
@@ -61,6 +61,7 @@
 #include <cstring>
 #include <cstdio>
 #include <cctype>
+#include <cstdlib>
 #ifdef _WIN32
 #    include <shlobj.h>
 #    include <mbstring.h>
@@ -112,7 +113,8 @@
 
 std::unique_ptr<GlobalParams> globalParams;
 
-#if defined(ENABLE_RELOCATABLE) && defined(_WIN32)
+#if defined(ENABLE_RELOCATABLE)
+#if defined(_WIN32)
 
 /* search for data relative to where we are installed */
 
@@ -186,9 +188,66 @@ static const char *get_poppler_fontsdir(void)
 #    undef POPPLER_FONTSDIR
 #    define POPPLER_FONTSDIR get_poppler_fontsdir()
 
-#else
+#elif defined(__APPLE__) && !defined(MACPORTS) && !defined(HOMEBREW)
+/* Mac Bundle, use exec-relative */
+
+#include <mach-o/dyld.h>
+
+std::string path_getfather(const std::string& s)
+{
+    std::string father = s;
+    if (father == "/")
+        return father;
+    if (father.back() == '/') {
+        father.pop_back();
+    }
+    auto slp = father.rfind('/');
+    if (slp == std::string::npos)
+        return "./";
+    father.erase(slp);
+    if (father.back() != '/')
+        father += '/';
+    return father;
+}
+
+std::string path_thisexecdir()
+{
+    uint32_t size = 0;
+    _NSGetExecutablePath(nullptr, &size);
+    char *path= (char*)malloc(size+1);
+    _NSGetExecutablePath(path, &size);
+    char *rpath = realpath(path, nullptr);
+    std::string ret = path_getfather(rpath);
+    free(path);
+    free(rpath);
+    return ret;
+}
+
+static std::string get_poppler_localdir(const std::string &suffix)
+{
+    return path_getfather(path_thisexecdir()) + suffix;
+}
+
+static const char *get_poppler_datadir(void)
+{
+    static std::string retval;
+    static bool beenhere = false;
+
+    if (!beenhere) {
+        retval = get_poppler_localdir("Resources/poppler/");
+        beenhere = true;
+    }
+    return retval.c_str();
+}
+
+#    undef POPPLER_DATADIR
+#    define POPPLER_DATADIR get_poppler_datadir()
+#    define POPPLER_FONTSDIR nullptr
+
+#else /* <- __APPPLE__  */
 #    define POPPLER_FONTSDIR nullptr
 #endif
+#endif /* RELOCATABLE */
 
 //------------------------------------------------------------------------
 // SysFontInfo
diff --git a/runcmake.sh b/runcmake.sh
new file mode 100644
index 00000000..de50df6d
--- /dev/null
+++ b/runcmake.sh
@@ -0,0 +1,29 @@
+cmake -DENABLE_UNSTABLE_API_ABI_HEADERS=OFF \
+    -DBUILD_GTK_TESTS=OFF \
+    -DBUILD_QT5_TESTS=OFF \
+    -DBUILD_QT6_TESTS=OFF \
+    -DBUILD_CPP_TESTS=OFF \
+    -DBUILD_MANUAL_TESTS=OFF \
+    -DENABLE_BOOST=OFF \
+    -DENABLE_UTILS=ON \
+    -DENABLE_CPP=OFF \
+    -DENABLE_GLIB=OFF \
+    -DENABLE_GOBJECT_INTROSPECTION=OFF \
+    -DENABLE_GTK_DOC=OFF \
+    -DENABLE_QT5=OFF \
+    -DENABLE_QT6=OFF \
+    -DENABLE_LIBOPENJPEG=none \
+    -DENABLE_DCTDECODER=unmaintained \
+    -DENABLE_LCMS=OFF \
+    -DENABLE_LIBCURL=OFF \
+    -DENABLE_LIBTIFF=OFF \
+    -DENABLE_NSS3=OFF \
+    -DENABLE_GPGME=OFF \
+    -DENABLE_ZLIB_UNCOMPRESS=OFF \
+    -DUSE_FLOAT=OFF \
+    -DBUILD_SHARED_LIBS=OFF \
+    -DRUN_GPERF_IF_PRESENT=OFF \
+    -DENABLE_RELOCATABLE=ON \
+    -DEXTRA_WARN=ON \
+    ..
+    
